<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:h="http://java.sun.com/jsf/html"
                xmlns:f="http://java.sun.com/jsf/core"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                template="/WEB-INF/templates/template.xhtml">

    <ui:define name="content">
        <div class="Container100">
            <div class="ContainerIndent">
                <div class="ContainerIndent">
                    
                    <div class="ContainerIndent gray">
                        <h1 class="TexAlCenter gray Fs30">
                            <span class="red Fs40">Sentinel Documentation<br/><i class="icon-code"></i></span>
                        </h1>
                    </div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Installation</div>
                        <div class="EmptyBox10"></div>
                        <p>
                            Sentinel provides a main <i>template.xhtml</i> and additional leftmenu.xhtml, topbar.xhtml files for the base layout. These 3 files must be placed under
                            WEB-INF folder. Provided empty-page.xhtml is a sample content page using the main template.xhtml that defines "content" as the only ui:define placeholder. Other required resources are the css, js, image and font files that are located
                            inside resources/sentinel-layout folder, simply copy the sentinel-layout folder to your %WEB-APP-FOLDER%/resources folder so that final path would be %WEB-APP-FOLDER%/sentinel-layout/. Please
                            refer to demo app or maven project of the demo app as the reference.
                        </p>
                        <p>
                            Theme is a regular PrimeFaces theme and setup is simple as defining primefaces.THEME context parameter in web.xml as "sentinel", refer to <a style="color:#e90c45" href="http://www.primefaces.org/themes">themes page</a> for more information.
                        </p>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Navigation Menu</div>
                        <div class="EmptyBox10"></div>
                        <p>
                            Sentinel provides a navigation menu positioned at left side of the screen. This menu is responsive and adjusts to the screen width automatically. 
                            Menu is actually a PrimeFaces component specifically created for Sentinel under <i>http://primefaces.org/sentinel</i> namespace having <i>menu</i> as the tag name., usage is same as a regular PrimeFaces component that utilizes p:submenu and p:menuitem
                            components. This component is placed inside the Sentinel theme jar so this jar must be in your classpath. Demo application features an example menu created declaratively however since this component is a JSF component, you can also use PrimeFaces MenuModel API
                            to create the menu dynamically.
                        </p>
                        
                        <p>
                            Menu keeps its state using cookies so that between page navigations, state of the menu can be restored. In case you'd like to clear
                            this state, call <i>Sentinel.clearMenuState()</i> javascript method. For stateful menu to work, each menuitem and submenu must have explicit ids defined, otherwise
                            ids will be generated by JSF that may be different for each page. So please make sure you have defined explicit ids for each menuitem and submenu to have a stateful menu.
                             Menu is large by default, if you prefer slim menu by default add "slimmenu" style class to the #layout-menubar div in leftmenu.xhtml.
                        </p>
                        
                        <p>
                            In addition, jQuery and PrimeFaces.js files must be available on the page for menu to work. These files are included automatically whenever there is a PrimeFaces component on the page that
                            depends on them, however you can easily add them manually if required using h:outputScript component with name attribute values jquery/jquery.js and primefaces.js correspondingly under primefaces library. An example would be
                            <i>&lt;h:outputScript name="jquery/jquery.js" library="primefaces" /&gt;</i>
                        </p>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Migration Guide</div>
                        <div class="EmptyBox10"></div>
                        <div class="Fs15 red">1.0 to 1.1</div>
                        <ul>
                            <li>- Update core-layout.css, font-icon-layout.css and layout.js files.</li>
                            <li>- Replace theme jar with the new jar.</li>
                            <li>- Replace the menu markup in leftmenu.xhtml with the Sentinel Menu component. Refer to demo app for the example.</li>
                            <li>- Set "sm-mobiletopmenu" as the id of the second ul element in topbar.xhtml. Id of the first ul is "sm-topmenu" and it has not changed.</li>
                        </ul>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <div class="ContainerIndent">
                        <h1 class="TexAlCenter gray Fs30">
                            <span class="red Fs30">Core Layout<br/></span>
                        </h1>
                        <p class="leaden-back">
                            Core Layout is a set of CSS style classes used to create responsive layouts. Sentinel is also based on Core Layout and you may also choose to use this css utility
                            in your application as well however you can also use any other CSS layout framework with Sentinel.
                        </p>
                    </div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Responsive Mode</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Responsive Mode" class="Fs20" escape="false"/>
                            <h:outputText value="Responsive" class="hardblue" escape="false"/>
                            <h:outputText value="Makes an element responsive using media queries. For example; &lt;br /&gt;
                                          if screen width is smaller than 960px and bigger than 640px, this element's width sets to '50%', &lt;br /&gt;
                                          and if screen width smaller than 640px, this element's width sets to '100%'. &lt;br /&gt;
                                          Thus, width of this element adjusted to screen resolution on mobile phones and tablets. &lt;br /&gt;
                                          Resize browser window to see changes of red boxes below." escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back">
                        <div class="Container33 white Responsive"><div class="ContainerIndent red-back"><div class="ContainerIndent">Responsive Element (With Container33 Class)</div></div></div>
                        <div class="Container33 white Responsive"><div class="ContainerIndent red-back"><div class="ContainerIndent">Responsive Element (With Container33 Class)</div></div></div>
                        <div class="Container33 white Responsive"><div class="ContainerIndent red-back"><div class="ContainerIndent">Responsive Element (With Container33 Class)</div></div></div>
                    </p:panel>

                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">ContainerX's</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Containers (For Responsive Layout)" class="Fs20" escape="false"/>
                            <h:outputText value="Container100 &lt;br /&gt; Container96 &lt;br /&gt; Container90 &lt;br /&gt; Container85 &lt;br /&gt; Container80  &lt;br /&gt; Container75
                                           &lt;br /&gt; Container70 &lt;br /&gt; Container60  &lt;br /&gt; Container50  &lt;br /&gt; Container40  &lt;br /&gt; Container33 &lt;br /&gt; Container30
                                            &lt;br /&gt; Container25 &lt;br /&gt; Container20 &lt;br /&gt; Container10 &lt;br /&gt; Container5" class="hardblue" escape="false"/>
                            <h:outputText value="Very similar to the WidX classes but has additional features. These classes are aligned left and overflow inside is hidden.
                                          ContainerX classes are not mobile-compatible without the 'Repsonsive' class.
                                          Resize browser window to see changes of red and orange boxes below. &lt;br /&gt; &lt;br /&gt;
                                          .Container100{ width:100%; overflow:hidden; float:left;} , 
                                        .Container96{ width:96%; overflow:hidden; float:left;} , 
                                        .Container90{ width:90%; overflow:hidden; float:left;} , 
                                        .Container85{ width:85%; overflow:hidden; float:left;} , 
                                        .Container80{ width:80%; overflow:hidden; float:left;} , 
                                        .Container75{ width:75%; overflow:hidden; float:left;} , 
                                        .Container70{ width:70%; overflow:hidden; float:left;} , 
                                        .Container60{ width:60%; overflow:hidden; float:left;} , 
                                        .Container50{ width:50%; overflow:hidden; float:left;} , 
                                        .Container40{ width:40%; overflow:hidden; float:left;} , 
                                        .Container33{ width:33.3%; overflow:hidden; float:left;} , 
                                        .Container30{ width:30%; overflow:hidden; float:left;} , 
                                        .Container25{ width:25%; overflow:hidden; float:left;} , 
                                        .Container20{ width:20%; overflow:hidden; float:left;} , 
                                        .Container10{ width:10%; overflow:hidden; float:left;} , 
                                        .Container5{ width:5%; overflow:hidden; float:left;} , 
                                        .ContainerIndent{width:auto; overflow:hidden; display:block;}" escape="false"/>
                            
                            <h:outputText value="Container Indent" class="Fs20" escape="false"/>
                            <h:outputText value="ContainerIndent" class="hardblue" escape="false"/>
                            <h:outputText value="Depending on the solubility of 'ContainerX' classes allows an indentation. This indentation is controlled by the CSS media-queries.
                                          Of the elements inserted into the container , prevents the stop leaning on each other&lt;br /&gt; &lt;br /&gt;
                                          .ContainerIndent{width:auto; overflow:hidden; display:block;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back TexAlCenter">
                        <div class="Fleft red-back white Container20 MarAuto Responsive"> <br/>Container20 - Responsive<br/><br/> </div>
                        <div class="Fleft orange-back white Container30 MarAuto Responsive"> <br/>Container30 - Responsive<br/><br/> </div>
                        <div class="Fleft red-back white Container50 MarAuto Responsive"> <br/>Container50 - Responsive<br/><br/> </div>
                        <div class="EmptyBox10"></div>
                        <div class="Fleft red-back white Container33 MarAuto Responsive"> <br/>Container33 - Reponsive<br/><br/> </div>
                        <div class="Fleft orange-back white Container33 MarAuto Responsive"> <br/>Container33 - Reponsive<br/><br/> </div>
                        <div class="Fleft red-back white Container33 MarAuto Responsive"> <br/>Container33 - Reponsive<br/><br/> </div>
                        <div class="EmptyBox10"></div>
                        
                        <div class="Fleft white red-back Container40 MarAuto Responsive">Container40<div class="ContainerIndent white-back leaden">Container Indent</div></div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Selection</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Selection" class="Fs20 Wid30" escape="false"/>
                            <h:outputText value="Unselectable" class="hardblue Wid30" escape="false"/>
                            <h:outputText value="Makes text unselectable &lt;br /&gt; &lt;br /&gt; 
                                          .Unselectable { -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back">
                        <div class="Container100 white Responsive"><div class="ContainerIndent red-back"><div class="ContainerIndent Unselectable">This is unselectable text</div></div></div>
                    </p:panel>

                    <div class="EmptyBox30"></div>

                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Displaying</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Displaying" class="Fs20" escape="false"/>
                            <h:outputText value="DispBlock" class="hardblue" escape="false"/>
                            <h:outputText value="Displays an element as a block element &lt;br /&gt; &lt;br /&gt;
                                          .DispBlock{ display:block;}" escape="false"/>

                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="DispNone" class="hardblue" escape="false"/>
                            <h:outputText value="The element will not be displayed at all (has no effect on layout)&lt;br /&gt; &lt;br /&gt;
                                          .DispNone{display:none;}" escape="false"/>

                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="DispTable" class="hardblue" escape="false"/>
                            <h:outputText value="Let the element behave like a table element &lt;br /&gt; &lt;br /&gt;
                                          .DispTable{display:table;}" escape="false"/>

                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="DispInlBlock" class="hardblue" escape="false"/>
                            <h:outputText value="Displays an element as an inline-level block container. The inside of this block is formatted as block-level box, and the element itself is formatted as an inline-level box &lt;br /&gt; &lt;br /&gt;
                                          .DispInlBlock{display:inline-block;}" escape="false"/>

                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="DispTableCell" class="hardblue" escape="false"/>
                            <h:outputText value="Let the element behave like a td element &lt;br /&gt; &lt;br /&gt;
                                          .DispTableCell{ display:table-cell; vertical-align:middle;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back">

                    </p:panel>

                    <div class="EmptyBox30"></div>

                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Positioning</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                             <h:outputText value="Positioning" class="Fs20" escape="false"/>
                            <h:outputText value="PosFixed" class="hardblue" escape="false"/>
                            <h:outputText value="The element is positioned relative to the browser window &lt;br /&gt; &lt;br /&gt;
                                          .PosFixed{position:fixed;}" escape="false"/>

                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="PosAbsolute" class="hardblue" escape="false"/>
                            <h:outputText value="The element is positioned relative to its first positioned (not static) ancestor element &lt;br /&gt; &lt;br /&gt;
                                          .PosAbsolute{position:absolute;}" escape="false"/>

                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="PosRelative" class="hardblue" escape="false"/>
                            <h:outputText value="The element is positioned relative to its normal position, so 'left:20' adds 20 pixels to the element's LEFT position &lt;br /&gt; &lt;br /&gt;
                                          .PosRelative{ position:relative;}" escape="false"/>

                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="PosStatic" class="hardblue" escape="false"/>
                            <h:outputText value="Default value. Elements render in order, as they appear in the document flow &lt;br /&gt; &lt;br /&gt;
                                          .PosStatic{position:static;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back">

                    </p:panel>

                    <div class="EmptyBox30"></div>

                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Underline</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Text Decoration" class="Fs20" escape="false"/>
                            <h:outputText value="Underline" class="hardblue" escape="false"/>
                            <h:outputText value="Defines a line below the text &lt;br /&gt; &lt;br /&gt;
                                          .Underline{ text-decoration:underline;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back">
                        <div class="Underline TexAlCenter">This is underlined text</div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>

                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Floating</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Floating" class="Fs20" escape="false"/>
                            <h:outputText value="Fleft" class="hardblue" escape="false"/>
                            <h:outputText value="The element floats to the left &lt;br /&gt; &lt;br /&gt;
                                          .Fleft{ float:left;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="Fright" class="hardblue" escape="false"/>
                            <h:outputText value="The element floats to the right &lt;br /&gt; &lt;br /&gt;
                                          .Fleft{ float:right;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="Fnone" class="hardblue" escape="false"/>
                            <h:outputText value="The element is not floated, and will be displayed just where it occurs in the text. &lt;br /&gt; &lt;br /&gt;
                                          .Fleft{ float:none;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back">
                        <div class="Fleft red-back white PadWithBorder10 Wid20">This is floats to the left</div>
                        <div class="Fright red-back white PadWithBorder10 Wid20">This is floats to the right</div>
                        <div class="Fnone red-back white PadWithBorder10 Wid20">This is not floated (default)</div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>

                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Overflows</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Overflow" class="Fs20" escape="false"/>
                            <h:outputText value="OvHidden" class="hardblue" escape="false"/>
                            <h:outputText value="The overflow is clipped, and the rest of the content will be invisible &lt;br /&gt; &lt;br /&gt;
                                          .OvHidden{ overflow:hidden;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="OvScroll" class="hardblue" escape="false"/>
                            <h:outputText value="The overflow is clipped, but a scroll-bar is added to see the rest of the content &lt;br /&gt; &lt;br /&gt;
                                          .OvScroll{ overflow:scroll;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="OvAuto" class="hardblue" escape="false"/>
                            <h:outputText value="If overflow is clipped, a scroll-bar should be added to see the rest of the content &lt;br /&gt; &lt;br /&gt;
                                          .OvAuto{ overflow:auto;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="OvVisible" class="hardblue" escape="false"/>
                            <h:outputText value="The overflow is not clipped. It renders outside the element's box. &lt;br /&gt; &lt;br /&gt;
                                          .OvVisible{ overflow:visible;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="OvXScroll &lt;br /&gt; OvYScroll &lt;br /&gt; OvXHidden &lt;br /&gt; OvYHidden" class="hardblue" escape="false"/>
                            <h:outputText value="Axis of the elements (X or Y) mentioned were hidden or scroll &lt;br /&gt; &lt;br /&gt;
                                          .OvXScroll{ overflow-x:scroll;} , .OvYScroll{ overflow-y:scroll;} , .OvXHidden{ overflow-x:hidden;} , .OvYHidden{ overflow-y:hidden;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back TexAlCenter">
                        <p:button href="http://www.w3schools.com/cssref/pr_pos_overflow.asp" value="Get More Info About Overflows" target="_blank"/>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Empty Boxes</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Empty Boxes" class="Fs20" escape="false"/>
                            <h:outputText value="EmptyBox5 &lt;br /&gt; EmptyBox10 &lt;br /&gt; EmptyBox20 &lt;br /&gt; EmptyBox30 &lt;br /&gt; EmptyBox40 &lt;br /&gt; EmptyBox50
                                          &lt;br /&gt; EmptyBox60 &lt;br /&gt; EmptyBox70 &lt;br /&gt; EmptyBox80 &lt;br /&gt; EmptyBox90 &lt;br /&gt; EmptyBox100 &lt;br /&gt; EmptyBox110
                                          &lt;br /&gt; EmptyBox120 &lt;br /&gt; EmptyBox130 &lt;br /&gt; EmptyBox140 &lt;br /&gt; EmptyBox150" class="hardblue" escape="false"/>
                            <h:outputText value="Horizontally , leaving space so that the value of the specified number of pixels &lt;br /&gt; &lt;br /&gt;
                                          .EmptyBox5{ display:block; width:100%; height:5px; overflow:hidden;} , 
                                        .EmptyBox10{ display:block; width:100%; height:10px; overflow:hidden;} , 
                                        .EmptyBox20{ display:block; width:100%; height:20px; overflow:hidden;} , 
                                        .EmptyBox30{ display:block; width:100%; height:30px; overflow:hidden;} , 
                                        .EmptyBox40{ display:block; width:100%; height:40px; overflow:hidden;} , 
                                        .EmptyBox50{ display:block; width:100%; height:50px; overflow:hidden;} , 
                                        .EmptyBox60{ display:block; width:100%; height:60px; overflow:hidden;} , 
                                        .EmptyBox70{ display:block; width:100%; height:70px; overflow:hidden;} , 
                                        .EmptyBox80{ display:block; width:100%; height:80px; overflow:hidden;} , 
                                        .EmptyBox90{ display:block; width:100%; height:90px; overflow:hidden;} , 
                                        .EmptyBox100{ display:block; width:100%; height:100px; overflow:hidden;} , 
                                        .EmptyBox110{ display:block; width:100%; height:100px; overflow:hidden;} , 
                                        .EmptyBox120{ display:block; width:100%; height:100px; overflow:hidden;} , 
                                        .EmptyBox130{ display:block; width:100%; height:100px; overflow:hidden;} , 
                                        .EmptyBox140{ display:block; width:100%; height:100px; overflow:hidden;} , 
                                        .EmptyBox150{ display: block; width: 100%; height:150px; overflow:hidden;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back TexAlCenter">
                        <div class="red-back white PadWithBorder10 Wid20 MarAuto">Content</div>
                        <div class="EmptyBox30">this is empty box with 30px height value (EmptyBox30)</div>
                        <div class="red-back white PadWithBorder10 Wid20 MarAuto">Content</div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Opacity</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Opacity" class="Fs20" escape="false"/>
                            <h:outputText value="OpacZero &lt;br /&gt; Opac10 &lt;br /&gt; Opac20 &lt;br /&gt; Opac30 &lt;br /&gt; Opac40 &lt;br /&gt; Opac50 &lt;br /&gt; Opac60 
                                          &lt;br /&gt; Opac70 &lt;br /&gt; Opac80 &lt;br /&gt; Opac90 &lt;br /&gt; Opac95 &lt;br /&gt; Opac100" class="hardblue" escape="false"/>
                            <h:outputText value="Element gives transparency specified value &lt;br /&gt; &lt;br /&gt;
                                          .Opac100{ opacity:1; -webkit-opacity:1; -moz-opacity:1;} ,
                                        .Opac95{ opacity:0.95; -webkit-opacity:0.95; -moz-opacity:0.95;} , 
                                        .Opac90{ opacity:0.9; -webkit-opacity:0.9; -moz-opacity:0.9;} , 
                                        .Opac80{ opacity:0.8; -webkit-opacity:0.8; -moz-opacity:0.8;} , 
                                        .Opac70{ opacity:0.7; -webkit-opacity:0.7; -moz-opacity:0.7;} , 
                                        .Opac60{ opacity:0.6; -webkit-opacity:0.6; -moz-opacity:0.6;} , 
                                        .Opac50{ opacity:0.5; -webkit-opacity:0.5; -moz-opacity:0.5;} , 
                                        .Opac40{ opacity:0.4; -webkit-opacity:0.4; -moz-opacity:0.4;} , 
                                        .Opac30{ opacity:0.3; -webkit-opacity:0.3; -moz-opacity:0.3;} , 
                                        .Opac20{ opacity:0.2; -webkit-opacity:0.2; -moz-opacity:0.2;} , 
                                        .Opac10{ opacity:0.1; -webkit-opacity:0.1; -moz-opacity:0.1;} , 
                                        .OpacZero{ opacity:0; -webkit-opacity:0; -moz-opacity:0;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back TexAlCenter">
                        <div class="Fleft red-back white PadWithBorder10 Wid20 MarAuto Opac10">Opac10</div>
                        <div class="Fleft red-back white PadWithBorder10 Wid20 MarAuto Opac30">Opac30</div>
                        <div class="Fleft red-back white PadWithBorder10 Wid20 MarAuto Opac50">Opac50</div>
                        <div class="Fleft red-back white PadWithBorder10 Wid20 MarAuto Opac70">Opac70</div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">WidX's</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Width Special Values" class="Fs20" escape="false"/>
                            <h:outputText value="Wid100 &lt;br /&gt; Wid90 &lt;br /&gt; Wid80 &lt;br /&gt; Wid70 &lt;br /&gt; Wid60 &lt;br /&gt; Wid50 &lt;br /&gt; Wid45 &lt;br /&gt; Wid40
                                          &lt;br /&gt; Wid33 &lt;br /&gt; Wid30 &lt;br /&gt; Wid25 &lt;br /&gt; Wid20 &lt;br /&gt; Wid10" class="hardblue" escape="false"/>
                            <h:outputText value="Element data width is specified with a percentage value. Add Responsive class to apply responsive features.&lt;br /&gt; &lt;br /&gt;
                                          .Wid100{ width:100%;} , 
                                        .Wid90{ width:90%;} , 
                                        .Wid80{ width:80%;} , 
                                        .Wid70{ width:70%;} , 
                                        .Wid60{ width:60%;} , 
                                        .Wid50{ width:50%;} , 
                                        .Wid45{ width:45%;} , 
                                        .Wid40{ width:40%;} , 
                                        .Wid30{ width:30%;} , 
                                        .Wid33{ width:33.3%;} , 
                                        .Wid25{ width:25%;} , 
                                        .Wid20{ width:20%;} , 
                                        .Wid10{ width:10%;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back TexAlCenter">
                        <div class="Fleft red-back white Wid20 MarAuto Responsive"> <br/>Wid20 - Responsive<br/><br/> </div>
                        <div class="Fleft orange-back white Wid20 MarAuto"> <br/>Wid20<br/><br/> </div>
                        <div class="Fleft red-back white Wid20 MarAuto"> <br/>Wid20<br/><br/> </div>
                        <div class="Fleft orange-back white Wid20 MarAuto Responsive"> <br/>Wid20 - Responsive<br/><br/> </div>
                        <div class="Fleft red-back white Wid20 MarAuto"> <br/>Wid20<br/><br/> </div>
                        <div class="EmptyBox10"></div>
                        <div class="Fleft red-back white Wid33 MarAuto Responsive"> <br/>Wid33 - Reponsive<br/><br/> </div>
                        <div class="Fleft orange-back white Wid33 MarAuto Responsive"> <br/>Wid33 - Reponsive<br/><br/> </div>
                        <div class="Fleft red-back white Wid33 MarAuto Responsive"> <br/>Wid33 - Reponsive<br/><br/> </div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Text Aligning</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Text Align" class="Fs20" escape="false"/>
                            <h:outputText value="TexAlCenter" class="hardblue" escape="false"/>
                            <h:outputText value="Centers the text&lt;br /&gt; &lt;br /&gt;
                                          .TexAlCenter{ text-align:center;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="TexAlLeft" class="hardblue" escape="false"/>
                            <h:outputText value="Aligns the text to the left &lt;br /&gt; &lt;br /&gt;
                                          .TexAlLeft{ text-align:left;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="TexAlRight" class="hardblue" escape="false"/>
                            <h:outputText value="Aligns the text to the right &lt;br /&gt; &lt;br /&gt;
                                          .TexAlRight{ text-align:right;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back TexAlCenter">
                        <div class="TexAlCenter Container100">This text align center</div>
                        <div class="TexAlLeft Container100">This text align left</div>
                        <div class="TexAlRight Container100">This text align right</div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Box Size</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Box Sizing" class="Fs20" escape="false"/>
                            <h:outputText value="BoxSizeContent" class="hardblue" escape="false"/>
                            <h:outputText value="Default. The width and height properties (and min/max properties) includes only the content. Border, padding, or margin are not included &lt;br /&gt; &lt;br /&gt;
                                          .BoxSizeContent{ box-sizing:content-box; -webkit-box-sizing:content-box; -moz-box-sizing:content-box;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="BoxSizeBorder" class="hardblue" escape="false"/>
                            <h:outputText value="The width and height properties (and min/max properties) includes content, padding and border, but not the margin &lt;br /&gt; &lt;br /&gt;
                                          .BoxSizeBorder{ box-sizing:border-box; -webkit-box-sizing:border-box; -moz-box-sizing:border-box;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back TexAlCenter">
                        <div class="BoxSizeBorder Container30 red-back white" style="border:solid 10px #0bb113;"><div class="ContainerIndent">Box Sizing : BoxSizeBorder (same width with below box)</div></div>
                        <div class="EmptyBox10"></div>
                        <div class="BoxSizeContent Container30 red-back white"><div class="ContainerIndent">Box Sizing : BoxSizeContent</div></div>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Font Sizes</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Font Size" class="Fs20" escape="false"/>
                            <h:outputText value="Wid100 &lt;br /&gt; Wid90 &lt;br /&gt; Wid80 &lt;br /&gt; Wid70 &lt;br /&gt; Wid60 &lt;br /&gt; Wid50 &lt;br /&gt; Wid45 &lt;br /&gt; Wid40
                                          &lt;br /&gt; Wid33 &lt;br /&gt; Wid30 &lt;br /&gt; Wid25 &lt;br /&gt; Wid20 &lt;br /&gt; Wid10" class="hardblue" escape="false"/>
                            <h:outputText value="Set to the specified pixel value of font-size. &lt;br /&gt; &lt;br /&gt;
                                          .Fs9{font-size:9px !important;} ,  
                                        .Fs10{font-size:10px !important;} , 
                                        .Fs11{font-size:11px !important;} ,  
                                        .Fs12{font-size:12px !important;} ,  
                                        .Fs13{font-size:13px !important;} ,  
                                        .Fs14{font-size:14px !important;} ,  
                                        .Fs15{font-size:15px !important;} ,  
                                        .Fs16{font-size:16px !important;} ,  
                                        .Fs17{font-size:17px !important;} ,  
                                        .Fs18{font-size:18px !important;} ,  
                                        .Fs19{font-size:19px !important;} ,  
                                        .Fs20{font-size:20px !important;} ,  
                                        .Fs21{font-size:21px !important;} ,  
                                        .Fs22{font-size:22px !important;} ,  
                                        .Fs23{font-size:23px !important;} ,  
                                        .Fs24{font-size:24px !important;} ,  
                                        .Fs25{font-size:25px !important;} ,  
                                        .Fs26{font-size:26px !important;} ,  
                                        .Fs27{font-size:27px !important;} ,  
                                        .Fs28{font-size:28px !important;} ,  
                                        .Fs29{font-size:29px !important;} ,  
                                        .Fs30{font-size:30px !important;} , 
                                        .Fs40{font-size:40px !important;} , 
                                        .Fs50{font-size:50px !important;} , 
                                        .Fs60{font-size:60px !important;} , 
                                        .Fs100{font-size:100px !important;} , 
                                        .Fs130{font-size:130px !important;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back TexAlCenter">
                        <span class="Fs14">Font Size : 14px</span><br/>
                        <span class="Fs18">Font Size : 18px</span><br/>
                        <span class="Fs24">Font Size : 24px</span><br/>
                        <span class="Fs30">Font Size : 30px</span><br/>
                        <span class="Fs60">Font Size : 60px</span>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Font Weights</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Font Weight" class="Fs20" escape="false"/>
                            <h:outputText value="FontBold" class="hardblue" escape="false"/>
                            <h:outputText value="Defines thick characters. &lt;br /&gt; &lt;br /&gt;
                                          .FontBold{ font-weight:bold;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="FontLight" class="hardblue" escape="false"/>
                            <h:outputText value="Defines lighter characters. &lt;br /&gt; &lt;br /&gt;
                                          .FontLight{ font-weight:lighter;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="FontNormal" class="hardblue" escape="false"/>
                            <h:outputText value="Defines normal characters. This is default. &lt;br /&gt; &lt;br /&gt;
                                          .FontNormal{ font-weight:normal;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back TexAlCenter" style="font-family:Verdana !important;">
                        <span class="Fs20 FontBold orange">This is bold text</span><br/>
                        <span class="Fs20 FontLighter orange">This is lighter text</span>
                    </p:panel>
                    
                    <div class="EmptyBox30"></div>
                    
                    <p:panel class="leaden-back">
                        <div class="Fs20 TexAlCenter red">Transitions Timing (For CSS3 Animations)</div>
                        <div class="EmptyBox10"></div>
                        <p:panelGrid columns="3" class="Wid100">
                            <h:outputText value="Class Group" class="orange Fs20 Wid30"/>
                            <h:outputText value="Class Name" class="orange Fs20 Wid30"/>
                            <h:outputText value="Instructions" class="orange Fs20 Wid40"/>

                            <h:outputText value="Transitions Timing" class="Fs20" escape="false"/>
                            <h:outputText value="Animated05" class="hardblue" escape="false"/>
                            <h:outputText value="Make css3 transitions with the specified duration. ( Animated05 = Transition ends in 500 milli-seconds with easing) &lt;br /&gt; &lt;br /&gt;
                                          .Animated05{-webkit-transition: all 0.5s ease; -moz-transition: all 0.5s ease; -ms-transition: all 0.5s ease; -o-transition: all 0.5s ease; transition: all 0.5s ease;}" escape="false"/>
                            
                            <h:outputText value="" class="Fs20" escape="false"/>
                            <h:outputText value="Animated05" class="hardblue" escape="false"/>
                            <h:outputText value="Make css3 transitions with the specified duration. ( Animated1 = Transition ends in 1 second with easing) &lt;br /&gt; &lt;br /&gt;
                                          .Animated1{-webkit-transition: all 1s ease; -moz-transition: all 1s ease; -ms-transition: all 1s ease; -o-transition: all 1s ease; transition: all 1s ease;}" escape="false"/>
                        </p:panelGrid>
                    </p:panel>
                    <p:panel class="leaden-back TexAlCenter">
                        <div class="red-back Animated05 changecolor Container30 white" style="margin-right: 10px;"><br/>Hover Here ( Color and padding changing in 500 milli-seconds with Animated05 )<br/><br/></div>
                        <div class="orange-back Animated1 changecolor Container30 white"><br/>Hover Here ( Color and padding changing in 1 second with Animated1 )<br/><br/></div>
                    </p:panel>
                    
                    <div class="EmptyBox60"></div>
                </div>
            </div>
        </div>
    </ui:define>

</ui:composition>